// –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å PDF –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä–æ–º
// –≠—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç –∏–Ω—Ç–µ–≥—Ä–∏—Ä—É–µ—Ç—Å—è —Å –Ω–æ–≤–æ–π –ø–∞–Ω–µ–ª—å—é —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è

(function() {
  'use strict';



  // –ñ–¥–µ–º –∑–∞–≥—Ä—É–∑–∫–∏ –ø–∞–Ω–µ–ª–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è
  function waitForControlPanel() {
    return new Promise((resolve) => {
      const checkPanel = () => {
        if (window.controlPanel && window.controlPanel.pdfButton) {
          resolve();
        } else {
          setTimeout(checkPanel, 100);
        }
      };
      checkPanel();
    });
  }

  async function generatePDF() {
    try {
      const { jsPDF } = window.jspdf;
      // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º crossOrigin –¥–ª—è –≤—Å–µ—Ö –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
      document.querySelectorAll('img').forEach(img => {
        img.setAttribute('crossOrigin', 'anonymous');
      });

      // –ó–∞—Ö–≤–∞—Ç —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π CORS –∏ –∏–≥–Ω–æ—Ä–∏—Ä–æ–≤–∞–Ω–∏–µ–º –ø–∞–Ω–µ–ª–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è
      const canvas = await html2canvas(document.body, {
        useCORS: true,
        ignoreElements: (element) => element.id === 'control-panel'
      });

      const imgData = canvas.toDataURL('image/png');
      const pdf = new jsPDF('p', 'mm', 'a4');
      const pdfWidth = pdf.internal.pageSize.getWidth();
      const pdfHeight = (canvas.height * pdfWidth) / canvas.width;
      pdf.addImage(imgData, 'PNG', 0, 0, pdfWidth, pdfHeight);
      pdf.save('page.pdf');
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ PDF:', error);
      if (typeof showNotification === 'function') {
        showNotification('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ PDF', '#dc3545');
      }
    }
  }

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ —Å PDF
  async function integratePDFFunction() {
    await waitForControlPanel();
    
    const pdfButton = window.controlPanel.pdfButton;
    
    // –ó–∞–º–µ–Ω—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–ª–∏–∫–∞ –Ω–∞ PDF –∫–Ω–æ–ø–∫–µ
    pdfButton.onclick = null; // –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫
    pdfButton.addEventListener('click', async function() {
      try {
        // –°–æ—Ö—Ä–∞–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ –ø–µ—Ä–µ–¥ –≥–µ–Ω–µ—Ä–∞—Ü–∏–µ–π PDF
        if (typeof saveToLocalStorage === 'function') {
          saveToLocalStorage();
        }

        // –°–æ–∑–¥–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ —Å –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è–º–∏
        generatePDF();
        
      } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–¥–≥–æ—Ç–æ–≤–∫–µ PDF:', error);
        if (typeof showNotification === 'function') {
          showNotification('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–¥–≥–æ—Ç–æ–≤–∫–µ PDF', '#dc3545');
        }
      }
    });

    console.log('PDF –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è –∑–∞–≥—Ä—É–∂–µ–Ω–∞ –∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–∞ –∫ –ø–∞–Ω–µ–ª–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è');
  }

  // –§—É–Ω–∫—Ü–∏—è –ø–æ–∫–∞–∑–∞ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ —Å –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è–º–∏
  function showPDFModal() {
    // –°–æ–∑–¥–∞–µ–º –æ–≤–µ—Ä–ª–µ–π
    const overlay = document.createElement('div');
    overlay.style.cssText = `
      position: fixed;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      background: rgba(0, 0, 0, 0.7);
      z-index: 2000;
      display: flex;
      align-items: center;
      justify-content: center;
      backdrop-filter: blur(5px);
    `;

    // –°–æ–∑–¥–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ
    const modal = document.createElement('div');
    modal.style.cssText = `
      background: white;
      border-radius: 15px;
      padding: 30px;
      max-width: 500px;
      width: 90%;
      box-shadow: 0 20px 60px rgba(0, 0, 0, 0.3);
      text-align: center;
      position: relative;
    `;

    modal.innerHTML = `
      <div style="font-size: 48px; margin-bottom: 20px;">üìÑ</div>
      <h2 style="color: #333; margin-bottom: 20px; font-size: 24px;">–ì–µ–Ω–µ—Ä–∞—Ü–∏—è PDF</h2>
      <div style="color: #666; line-height: 1.6; margin-bottom: 25px; text-align: left;">
        <p><strong>–î–ª—è —Å–æ–∑–¥–∞–Ω–∏—è PDF —Ñ–∞–π–ª–∞:</strong></p>
        <ol style="padding-left: 20px;">
          <li>–û—Ç–∫—Ä–æ–π—Ç–µ —Ç–µ—Ä–º–∏–Ω–∞–ª –≤ –ø–∞–ø–∫–µ –ø—Ä–æ–µ–∫—Ç–∞</li>
          <li>–í—ã–ø–æ–ª–Ω–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É: <code style="background: #f5f5f5; padding: 2px 6px; border-radius: 4px;">npm install</code></li>
          <li>–ó–∞–ø—É—Å—Ç–∏—Ç–µ –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä: <code style="background: #f5f5f5; padding: 2px 6px; border-radius: 4px;">npm start</code></li>
          <li>PDF —Ñ–∞–π–ª –±—É–¥–µ—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω –≤ –ø–∞–ø–∫—É –ø—Ä–æ–µ–∫—Ç–∞</li>
        </ol>
        <p style="margin-top: 15px;"><strong>üí° –°–æ–≤–µ—Ç:</strong> –í—Å–µ –≤–∞—à–∏ –∏–∑–º–µ–Ω–µ–Ω–∏—è —É–∂–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –∏ –±—É–¥—É—Ç –≤–∫–ª—é—á–µ–Ω—ã –≤ PDF!</p>
      </div>
      <div style="display: flex; gap: 15px; justify-content: center;">
        <button id="export-data-btn" style="
          background: linear-gradient(135deg, #28a745 0%, #20c997 100%);
          color: white;
          border: none;
          padding: 12px 24px;
          border-radius: 8px;
          cursor: pointer;
          font-size: 14px;
          font-weight: 500;
          transition: all 0.3s ease;
        ">üíæ –≠–∫—Å–ø–æ—Ä—Ç –¥–∞–Ω–Ω—ã—Ö</button>
        <button id="close-modal-btn" style="
          background: linear-gradient(135deg, #6c757d 0%, #495057 100%);
          color: white;
          border: none;
          padding: 12px 24px;
          border-radius: 8px;
          cursor: pointer;
          font-size: 14px;
          font-weight: 500;
          transition: all 0.3s ease;
        ">–ó–∞–∫—Ä—ã—Ç—å</button>
      </div>
    `;

    // –î–æ–±–∞–≤–ª—è–µ–º —ç—Ñ—Ñ–µ–∫—Ç—ã –¥–ª—è –∫–Ω–æ–ø–æ–∫
    const buttons = modal.querySelectorAll('button');
    buttons.forEach(button => {
      button.addEventListener('mouseenter', function() {
        this.style.transform = 'translateY(-2px)';
        this.style.filter = 'brightness(1.1)';
      });

      button.addEventListener('mouseleave', function() {
        this.style.transform = 'translateY(0)';
        this.style.filter = 'brightness(1)';
      });
    });

    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —ç–∫—Å–ø–æ—Ä—Ç–∞ –¥–∞–Ω–Ω—ã—Ö
    modal.querySelector('#export-data-btn').addEventListener('click', function() {
      exportCVData();
      if (typeof showNotification === 'function') {
        showNotification('üíæ –î–∞–Ω–Ω—ã–µ —ç–∫—Å–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω—ã –≤ —Ñ–∞–π–ª cv-data.json', '#28a745');
      }
    });

    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∑–∞–∫—Ä—ã—Ç–∏—è
    modal.querySelector('#close-modal-btn').addEventListener('click', function() {
      document.body.removeChild(overlay);
    });

    // –ó–∞–∫—Ä—ã—Ç–∏–µ –ø–æ –∫–ª–∏–∫—É –Ω–∞ –æ–≤–µ—Ä–ª–µ–π
    overlay.addEventListener('click', function(e) {
      if (e.target === overlay) {
        document.body.removeChild(overlay);
      }
    });

    overlay.appendChild(modal);
    document.body.appendChild(overlay);

    // –ê–Ω–∏–º–∞—Ü–∏—è –ø–æ—è–≤–ª–µ–Ω–∏—è
    overlay.style.opacity = '0';
    modal.style.transform = 'scale(0.8)';
    setTimeout(() => {
      overlay.style.transition = 'opacity 0.3s ease';
      modal.style.transition = 'transform 0.3s ease';
      overlay.style.opacity = '1';
      modal.style.transform = 'scale(1)';
    }, 10);
  }

  // –§—É–Ω–∫—Ü–∏—è —ç–∫—Å–ø–æ—Ä—Ç–∞ –¥–∞–Ω–Ω—ã—Ö CV
  function exportCVData() {
    try {
      // –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ localStorage
      const cvData = localStorage.getItem('cvData');
      const dataToExport = {
        timestamp: new Date().toISOString(),
        data: cvData ? JSON.parse(cvData) : {},
        version: '1.0'
      };

      // –°–æ–∑–¥–∞–µ–º –∏ —Å–∫–∞—á–∏–≤–∞–µ–º —Ñ–∞–π–ª
      const blob = new Blob([JSON.stringify(dataToExport, null, 2)], {
        type: 'application/json'
      });
      
      const url = URL.createObjectURL(blob);
      const a = document.createElement('a');
      a.href = url;
      a.download = 'cv-data.json';
      document.body.appendChild(a);
      a.click();
      document.body.removeChild(a);
      URL.revokeObjectURL(url);

      console.log('CV –¥–∞–Ω–Ω—ã–µ —ç–∫—Å–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω—ã:', dataToExport);
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —ç–∫—Å–ø–æ—Ä—Ç–µ –¥–∞–Ω–Ω—ã—Ö:', error);
      if (typeof showNotification === 'function') {
        showNotification('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —ç–∫—Å–ø–æ—Ä—Ç–µ –¥–∞–Ω–Ω—ã—Ö', '#dc3545');
      }
    }
  }

  // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ DOM
  document.addEventListener('DOMContentLoaded', function() {
    integratePDFFunction();
  });

})();

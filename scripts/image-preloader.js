/**
 * МОДУЛЬ ОПТИМИЗАЦИИ ЗАГРУЗКИ ИЗОБРАЖЕНИЯ ПРОФИЛЯ
 * 
 * Этот скрипт реализует предзагрузку изображения профиля для улучшения пользовательского опыта.
 * Основные функции:
 * - Показывает fallback цвет пока изображение загружается
 * - Отслеживает состояние загрузки (загрузка, успех, ошибка)
 * - Применяет соответствующие CSS классы для плавных переходов
 * - Логирует ошибки загрузки для отладки
 * 
 * Связанные файлы:
 * - CSS: стили для .avatar.loading, .avatar.loaded, .avatar.error
 * - HTML: элемент с классом .avatar
 * - Изображение: img/profile.png (37KB)
 */

// Ожидаем полной загрузки DOM перед инициализацией
document.addEventListener('DOMContentLoaded', function() {
    // Находим элемент аватара на странице
    const avatar = document.querySelector('.avatar');
    
    // Проверяем существование элемента аватара
    if (avatar) {
        // Создаем новый объект Image для предзагрузки изображения
        // Это позволяет загрузить изображение в фоне, не блокируя интерфейс
        const img = new Image();
        
        // Добавляем CSS класс 'loading' для показа состояния загрузки
        // В CSS этот класс показывает fallback цвет (#f5f5f5) вместо изображения
        avatar.classList.add('loading');
        
        // === ОБРАБОТЧИК УСПЕШНОЙ ЗАГРУЗКИ ИЗОБРАЖЕНИЯ ===
        img.onload = function() {
            // Убираем класс загрузки (скрывает fallback цвет)
            avatar.classList.remove('loading');
            
            // Добавляем класс успешной загрузки для плавного появления изображения
            // CSS класс 'loaded' включает анимацию появления и оптимизацию рендеринга
            avatar.classList.add('loaded');
        };
        
        // === ОБРАБОТЧИК ОШИБКИ ЗАГРУЗКИ ИЗОБРАЖЕНИЯ ===
        img.onerror = function() {
            // Убираем класс загрузки
            avatar.classList.remove('loading');
            
            // Добавляем класс ошибки для показа альтернативного состояния
            // CSS может показать placeholder или сообщение об ошибке
            avatar.classList.add('error');
            
            // Логируем предупреждение в консоль для отладки
            console.warn('Не удалось загрузить изображение профиля: img/profile.png');
        };
        
        // === ЗАПУСК ЗАГРУЗКИ ИЗОБРАЖЕНИЯ ===
        // Устанавливаем путь к изображению, что запускает процесс загрузки
        // Изображение загружается асинхронно, не блокируя остальную страницу
        img.src = 'img/profile.png';
        
        // Примечание: Размер изображения 37KB оптимален для быстрой загрузки
        // При необходимости можно добавить дополнительные форматы (WebP, AVIF)
    } else {
        // Логируем предупреждение если элемент аватара не найден
        console.warn('Элемент .avatar не найден на странице');
    }
});

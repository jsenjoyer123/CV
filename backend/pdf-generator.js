const puppeteer = require('puppeteer');
const express = require('express');
const path = require('path');
const fs = require('fs');

class CVPDFGenerator {
  constructor() {
    this.app = express();
    this.port = 3000;
    this.browser = null;
    this.page = null;
    // –ü—É—Ç—å –∫ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω–æ–º—É Chrome
    this.chromePath = '/home/user/.cache/puppeteer/chrome/linux-121.0.6167.85/chrome-linux64/chrome';
  }

  // –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Express —Å–µ—Ä–≤–µ—Ä–∞ –¥–ª—è —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏—Ö —Ñ–∞–π–ª–æ–≤
  setupServer() {
    // –û–±—Å–ª—É–∂–∏–≤–∞–µ–º —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏–µ —Ñ–∞–π–ª—ã –∏–∑ —Ç–µ–∫—É—â–µ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
    this.app.use(express.static(__dirname));
    
    // –û—Å–Ω–æ–≤–Ω–æ–π –º–∞—Ä—à—Ä—É—Ç –¥–ª—è CV
    this.app.get('/', (req, res) => {
      res.sendFile(path.join(__dirname, 'index.html'));
    });

    return new Promise((resolve) => {
      this.server = this.app.listen(this.port, () => {
        console.log(`üöÄ –°–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –Ω–∞ http://localhost:${this.port}`);
        resolve();
      });
    });
  }

  // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Puppeteer
  async initPuppeteer() {
    console.log('üìñ –ó–∞–ø—É—Å–∫ Puppeteer...');
    this.browser = await puppeteer.launch({
      headless: 'new',
      executablePath: this.chromePath, // –ò—Å–ø–æ–ª—å–∑—É–µ–º —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã–π Chrome
      args: [
        '--no-sandbox',
        '--disable-setuid-sandbox',
        '--disable-dev-shm-usage',
        '--disable-accelerated-2d-canvas',
        '--no-first-run',
        '--no-zygote',
        '--disable-gpu'
      ]
    });

    this.page = await this.browser.newPage();
    
    // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ä–∞–∑–º–µ—Ä —Å—Ç—Ä–∞–Ω–∏—Ü—ã A4
    await this.page.setViewport({
      width: 595,  // –®–∏—Ä–∏–Ω–∞ 595 –ø–∏–∫—Å–µ–ª–µ–π
      height: 842, // –í—ã—Å–æ—Ç–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç —Ñ–æ—Ä–º–∞—Ç—É A4 (842 –ø–∏–∫—Å–µ–ª—è)
      deviceScaleFactor: 2 // –í—ã—Å–æ–∫–æ–µ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–µ
    });
  }

  // –ó–∞–≥—Ä—É–∑–∫–∞ —Å–æ—Ö—Ä–∞–Ω—ë–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö –∏–∑ localStorage (–µ—Å–ª–∏ –µ—Å—Ç—å)
  async loadSavedData() {
    console.log('üíæ –ó–∞–≥—Ä—É–∑–∫–∞ —Å–æ—Ö—Ä–∞–Ω—ë–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö...');
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —Å–æ—Ö—Ä–∞–Ω—ë–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –≤ –±—Ä–∞—É–∑–µ—Ä–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    // –î–ª—è —ç—Ç–æ–≥–æ –º–æ–∂–µ–º –ø—Ä–æ—á–∏—Ç–∞—Ç—å –¥–∞–Ω–Ω—ã–µ –∏–∑ —Ñ–∞–π–ª–∞ –∏–ª–∏ –ø–µ—Ä–µ–¥–∞—Ç—å –∏—Ö –∫–∞–∫ –ø–∞—Ä–∞–º–µ—Ç—Ä
    const savedDataPath = path.join(__dirname, 'saved-cv-data.json');
    
    if (fs.existsSync(savedDataPath)) {
      const savedData = JSON.parse(fs.readFileSync(savedDataPath, 'utf8'));
      
      // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ –≤ localStorage —Å—Ç—Ä–∞–Ω–∏—Ü—ã
      await this.page.evaluateOnNewDocument((data) => {
        localStorage.setItem('cvData', JSON.stringify(data));
      }, savedData);
      
      console.log('‚úÖ –°–æ—Ö—Ä–∞–Ω—ë–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –∑–∞–≥—Ä—É–∂–µ–Ω—ã');
    } else {
      console.log('‚ÑπÔ∏è –°–æ—Ö—Ä–∞–Ω—ë–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã, –∏—Å–ø–æ–ª—å–∑—É–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é');
    }
  }

  // –≠–∫—Å–ø–æ—Ä—Ç —Ç–µ–∫—É—â–∏—Ö –¥–∞–Ω–Ω—ã—Ö –∏–∑ localStorage –±—Ä–∞—É–∑–µ—Ä–∞
  async exportCurrentData() {
    console.log('üì§ –≠–∫—Å–ø–æ—Ä—Ç —Ç–µ–∫—É—â–∏—Ö –¥–∞–Ω–Ω—ã—Ö...');
    
    await this.page.goto(`http://localhost:${this.port}`, {
      waitUntil: 'networkidle2'
    });

    // –ñ–¥—ë–º –∑–∞–≥—Ä—É–∑–∫–∏ —Å–∫—Ä–∏–ø—Ç–æ–≤
    await this.page.waitForTimeout(2000);

    // –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ localStorage
    const currentData = await this.page.evaluate(() => {
      const savedData = localStorage.getItem('cvData');
      return savedData ? JSON.parse(savedData) : null;
    });

    if (currentData) {
      const savedDataPath = path.join(__dirname, 'saved-cv-data.json');
      fs.writeFileSync(savedDataPath, JSON.stringify(currentData, null, 2));
      console.log('‚úÖ –î–∞–Ω–Ω—ã–µ —ç–∫—Å–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω—ã –≤ saved-cv-data.json');
    }

    return currentData;
  }

  // –ì–µ–Ω–µ—Ä–∞—Ü–∏—è PDF
  async generatePDF(outputPath = 'cv-output.pdf') {
    console.log('üîÑ –ì–µ–Ω–µ—Ä–∞—Ü–∏—è PDF...');
    
    // –ó–∞–≥—Ä—É–∂–∞–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É
    await this.page.goto(`http://localhost:${this.port}`, {
      waitUntil: 'networkidle2'
    });

    // –ñ–¥—ë–º –ø–æ–ª–Ω–æ–π –∑–∞–≥—Ä—É–∑–∫–∏ –∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ —Å–∫—Ä–∏–ø—Ç–æ–≤
    await this.page.waitForTimeout(3000);

    // –î–æ–±–∞–≤–ª—è–µ–º CSS –¥–ª—è —Å–∫—Ä—ã—Ç–∏—è –∫–Ω–æ–ø–æ–∫ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è
    await this.page.addStyleTag({
      content: `
        .controls, #pdfButton { 
          display: none !important; 
        }
      `
    });

    // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º PDF
    const pdf = await this.page.pdf({
      path: outputPath,
      format: 'A4',
      printBackground: true,
      margin: {
        top: '10mm',
        right: '10mm',
        bottom: '10mm',
        left: '10mm'
      },
      preferCSSPageSize: true
    });

    console.log(`‚úÖ PDF —Å–æ—Ö—Ä–∞–Ω—ë–Ω –∫–∞–∫: ${outputPath}`);
    return pdf;
  }

  // –ó–∞–∫—Ä—ã—Ç–∏–µ –±—Ä–∞—É–∑–µ—Ä–∞ –∏ —Å–µ—Ä–≤–µ—Ä–∞
  async cleanup() {
    if (this.browser) {
      await this.browser.close();
    }
    if (this.server) {
      this.server.close();
    }
    console.log('üßπ –û—á–∏—Å—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞');
  }

  // –û—Å–Ω–æ–≤–Ω–æ–π –º–µ—Ç–æ–¥ –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ PDF
  async generate(options = {}) {
    const {
      outputPath = `cv-${new Date().toISOString().split('T')[0]}.pdf`,
      exportData = true,
      loadData = true
    } = options;

    try {
      // 1. –ó–∞–ø—É—Å–∫–∞–µ–º —Å–µ—Ä–≤–µ—Ä
      await this.setupServer();

      // 2. –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º Puppeteer
      await this.initPuppeteer();

      // 3. –ó–∞–≥—Ä—É–∂–∞–µ–º —Å–æ—Ö—Ä–∞–Ω—ë–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ (–µ—Å–ª–∏ –Ω—É–∂–Ω–æ)
      if (loadData) {
        await this.loadSavedData();
      }

      // 4. –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Ç–µ–∫—É—â–∏–µ –¥–∞–Ω–Ω—ã–µ (–µ—Å–ª–∏ –Ω—É–∂–Ω–æ)
      if (exportData) {
        await this.exportCurrentData();
      }

      // 5. –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º PDF
      await this.generatePDF(outputPath);

      console.log('üéâ –ì–µ–Ω–µ—Ä–∞—Ü–∏—è PDF –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!');
      
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ PDF:', error);
      throw error;
    } finally {
      await this.cleanup();
    }
  }
}

// –£—Ç–∏–ª–∏—Ç–∞ –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –∏–∑ –±—Ä–∞—É–∑–µ—Ä–∞
async function saveDataFromBrowser() {
  console.log('üîÑ –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –∏–∑ –±—Ä–∞—É–∑–µ—Ä–∞...');
  
  const generator = new CVPDFGenerator();
  
  try {
    await generator.setupServer();
    await generator.initPuppeteer();
    await generator.exportCurrentData();
    console.log('‚úÖ –î–∞–Ω–Ω—ã–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã!');
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö:', error);
  } finally {
    await generator.cleanup();
  }
}

// –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
async function main() {
  const args = process.argv.slice(2);
  
  if (args.includes('--save-data')) {
    // –¢–æ–ª—å–∫–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö
    await saveDataFromBrowser();
  } else if (args.includes('--pdf-only')) {
    // –¢–æ–ª—å–∫–æ –≥–µ–Ω–µ—Ä–∞—Ü–∏—è PDF –±–µ–∑ —ç–∫—Å–ø–æ—Ä—Ç–∞ –¥–∞–Ω–Ω—ã—Ö
    const generator = new CVPDFGenerator();
    await generator.generate({ exportData: false });
  } else {
    // –ü–æ–ª–Ω—ã–π —Ü–∏–∫–ª: —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö + –≥–µ–Ω–µ—Ä–∞—Ü–∏—è PDF
    const generator = new CVPDFGenerator();
    await generator.generate();
  }
}

// –≠–∫—Å–ø–æ—Ä—Ç –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –∫–∞–∫ –º–æ–¥—É–ª—å
module.exports = { CVPDFGenerator, saveDataFromBrowser };

// –ó–∞–ø—É—Å–∫ –µ—Å–ª–∏ —Ñ–∞–π–ª –≤—ã–∑–≤–∞–Ω –Ω–∞–ø—Ä—è–º—É—é
if (require.main === module) {
  main().catch(console.error);
}
